name: publish-docker-images

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 3. GCP에 로그인
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # 4. Google Cloud SDK 구성
      - name: Configure Google Cloud SDK
        run: |
          gcloud --quiet config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud --quiet auth configure-docker asia-northeast3-docker.pkg.dev

      # 5. express-server 이미지 빌드 및 푸시
      - name: Build and Push express-server Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/express-server/Dockerfile
          push: true
          tags: |
            asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/project/express-server:${{ github.sha }}
            asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/project/express-server:latest
          cache-from: type=gha,scope=express-server
          cache-to: type=gha,mode=max,scope=express-server
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DB_USER=${{ secrets.DB_USER }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=${{ secrets.DB_PORT }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            DATA_API_KEY=${{ secrets.DATA_API_KEY }}
